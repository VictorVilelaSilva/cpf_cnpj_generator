name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build app
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
          - os: macos-latest
          - os: windows-2022
    steps:
      - name: Install tk on ubuntu
        if: ${{ matrix.config.os == 'ubuntu-22.04'}}
        run: |
          sudo apt-get update
          sudo apt install python3-tk python3-dev python3-setuptools tcl

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.5'

      - name: Install dependencies for ${{ matrix.config.os }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with pyinstaller for ${{ matrix.config.os }}
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: pyinstaller main.py --onefile --noconsole --name FD4D --icon="./assets/Images/Logo.icns" --add-data "./assets:./assets"
          linux: pyinstaller main.py --onefile --noconsole --name FD4D --icon="./assets/Images/Logo.ico" --add-data "./assets:./assets"
          windows: pyinstaller main.py --onefile --noconsole --name FD4D --icon="./assets/Images/Logo.ico" --add-data "./assets;./assets"


      - name: Rename builded app
        run: mv ./dist ./dist-${{ matrix.config.os }}

      - name: Upload result job ${{ matrix.config.os }}
        uses: actions/upload-artifact@v4
        with:
          name: FD4D-pyinstaller-artifact-${{ matrix.config.os }}
          path: ./dist*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-2022]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name:  FD4D-pyinstaller-artifact-${{ matrix.os }}

      - name: Zip files
        run: |
          if [ "${{ matrix.os }}" == "windows-2022" ]; then
            zip -r FD4D_windows.zip dist-windows-*
          elif [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            zip -r FD4D_ubuntu.zip . -i dist-ubuntu-*
          else
            zip -r FD4D_macos.zip . -i dist-macos-*
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            FD4D_windows.zip
            FD4D_ubuntu.zip
            FD4D_macos.zip
